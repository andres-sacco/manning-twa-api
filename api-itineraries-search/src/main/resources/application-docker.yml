management:
  health.db.enabled: false
  endpoints:    
    web:
      base-path: /
      exposure:
        include: "*"

server:
  port: 7070
  servlet:
    context-path: /api/flights/itineraries-search

jetty:
  threadPool:
    maxThreads: 10
    minThreads: 10

chaos:
  monkey:
    enabled: true
    watcher:
      restController: true
    assaults:
      exceptionsActive: true
      latencyActive: true   
      latencyRangeStart: 10
      latencyRangeEnd: 12000  
      
spring:
  profiles:
    active: default

connector:  
   provider-alpha:
      host: api-provider-alpha:8070
      responseTimeout: 5000
      connectionTimeout: 5000
      readTimeout: 5000         
   provider-beta:
      host: api-provider-beta:9070
      responseTimeout: 5000
      connectionTimeout: 5000
      readTimeout: 5000 

resilience4j.circuitbreaker:
  instances:
    alphaService:
      registerHealthIndicator: true
      ringBufferSizeInClosedState: 5
      ringBufferSizeInHalfOpenState: 3
      waitDurationInOpenState: 5s
      failureRateThreshold: 2
      recordExceptions:
       - org.springframework.web.client.HttpServerErrorException
       - java.io.IOException
       - io.netty.handler.timeout.ReadTimeoutException
       - java.util.concurrent.TimeoutException
    betaService:
      registerHealthIndicator: true
      ringBufferSizeInClosedState: 5
      ringBufferSizeInHalfOpenState: 3
      waitDurationInOpenState: 5s
      failureRateThreshold: 2
      recordExceptions:
       - org.springframework.web.client.HttpServerErrorException
       - java.io.IOException
       - io.netty.handler.timeout.ReadTimeoutException
       - java.util.concurrent.TimeoutException
